<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- Helper 구동에 필요한 환경설정 값 -->
	<util:properties id="config">
		<!-- 기본 인코딩 타입 -->
		<prop key="encType">UTF-8</prop>
	</util:properties>

	<!-- DB연동에 필요한 환경설정 값 -->
	<util:properties id="dbConfig">
		<!-- 데이터베이스 호스트 이름 -->
		<prop key="dbHost">localhost</prop>
		<!-- 데이터베이스 포트번호 -->
		<prop key="dbPort">3306</prop>
		<!-- 데이터베이스 이름 -->
		<prop key="dbName">myschool</prop>
		<!-- 데이터베이스 문자셋 -->
		<prop key="dbCharset">utf8</prop>
		<!-- 데이터베이스 계정명 -->
		<prop key="dbUsername">root</prop>
		<!-- 데이터베이스 비밀번호 -->
		<prop key="dbPassword">root</prop>
		<!-- Mapper 파일들이 위치할 '/src/main/resources' 하위의 경로 -->
		<prop key="mapperPath">/mappers/**/*Mapper.xml</prop>
	</util:properties>

	<!-- WebHelper 주입 설정 -->
	<bean id="webHelper"
		class="study.spring.springhelper.helper.WebHelper">
		<property name="encType" value="#{config['encType']}" />
	</bean>

	<!-- RegexHelper 주입 설정 -->
	<bean id="regexHelper"
		class="study.spring.springhelper.helper.RegexHelper" />

	<!-- RetrifotHelper 주입 설정 -->
	<bean id="retrofitHelper"
		class="study.spring.springhelper.helper.RetrofitHelper" />
		
	<!-- ======= DATABASE 연동 설정 ======= -->
	<!-- JDBC 객체 생성 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="url"
			value="jdbc:log4jdbc:mysql://#{dbConfig['dbHost']}:#{dbConfig['dbPort']}/#{dbConfig['dbName']}?characterEncoding=#{dbConfig['dbCharset']}&amp;serverTimezone=UTC" />
		<property name="username" value="#{dbConfig['dbUsername']}" />
		<property name="password" value="#{dbConfig['dbPassword']}" />
	</bean>

	<!-- SQLSessionFactory 객체 생성 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- JDBC 객체를 dataSource에 대한 setter 메서드를 통해 주입 -->
		<property name="dataSource" ref="dataSource" />
		<!-- MyBatis Mapper 파일들에 대한 경로 패턴 주입 -->
		<property name="mapperLocations"
			value="classpath:#{dbConfig['mapperPath']}" />
	</bean>

	<!-- SQLSession 객체 생성. 이 객체가 Service 패턴에 주입된다. -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<!-- 생성자를 통해 SQLSessionFactory 객체 주입 -->
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</bean>

</beans>
